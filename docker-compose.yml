version: '3'
services:
  mysql:
    image: mysql:5.7
    container_name: node-docker_db_container
    env_file: ./mysql/mysql.env
    environment:
      - TZ=Asia/Tokyo
      - MYSQL_ROOT_HOST=${MYSQL_ROOT_HOST}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

    ports:
      - '3306:3306'
    restart: always
    volumes:
      - ./mysql/conf:/etc/mysql/conf.d/:ro
      - ./mysql/conf/sql:/docker-entrypoint-initdb.d
    networks:
      - container-link

  app:
    build: .
    container_name: node-docker_app_container
    env_file: ./app.env
    environment:
      - TZ=Asia/Tokyo
      - DEBUG=app:*
      - MYSQL_SERVER=${MYSQL_SERVER}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

    tty: true
    ports:
      - '3000:3000'
    restart: always
    volumes:
      - ./src:/app
    working_dir: /app
    command: npm start
    networks:
      - container-link
    depends_on:
      - mysql

#使用するネットワークを作成。docker-composeの場合service以下の名前を使って名前解決されるため、appとmysqlが自動的に接続される。
networks:
  default:
    external:
      name: bridge
  container-link:
    # これが作成されるネットワーク名（同名がなければ自動生成される）
    name: docker.internal

volumes:
  mysqldata: